services:
  server:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://[POSTGRESS_USER_HERE]:[POSTGRES_PASSWORD_HERE]@db:5432/discussion_db
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=[REDACTED]
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - API_V1_STR=/api/v1
      - PROJECT_NAME=Tangerines
      - BACKEND_CORS_ORIGINS=["https://ayushjayaswal.xyz"]
      - DEFAULT_PAGE_SIZE=20
      - MAX_PAGE_SIZE=100
      - CACHE_EXPIRE_SECONDS=300
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
      args:
        - NEXT_PUBLIC_API_BASE=https://ayushjayaswal.xyz
    ports:
      - "8001:3000"
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=[REDACTED]
      - POSTGRES_PASSWORD=[REDACTED]
      - POSTGRES_DB=discussion_db
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./0_init.sql:/docker-entrypoint-initdb.d/0_init.sql
      - ./1_dummy.sql:/docker-entrypoint-initdb.d/1_dummy.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U [POSTGRES_USER] -d discussion_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  adminer:
    image: adminer
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
